// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: examples/proto/examplepb/a_bit_of_everything.proto

package examplepb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "google.golang.org/genproto/protobuf/field_mask"
import google_protobuf2 "github.com/golang/protobuf/ptypes/empty"
import google_protobuf3 "github.com/golang/protobuf/ptypes/duration"
import _ "github.com/partitio/micro-gateway/examples/proto/pathenum"
import grpc_gateway_examples_sub "github.com/partitio/micro-gateway/examples/proto/sub"
import sub2 "github.com/partitio/micro-gateway/examples/proto/sub2"
import _ "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/partitio/micro-gateway/protoc-gen-swagger/options"

import (
	context "context"
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = grpc_gateway_examples_sub.StringMessage{}
var _ = google_protobuf3.Duration{}
var _ = sub2.IdMessage{}
var _ = google_protobuf2.Empty{}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for ABitOfEverythingService service

type ABitOfEverythingService interface {
	// Create a new ABitOfEverything
	//
	// This API creates a new ABitOfEverything
	Create(ctx context.Context, in *ABitOfEverything, opts ...client.CallOption) (*ABitOfEverything, error)
	CreateBody(ctx context.Context, in *ABitOfEverything, opts ...client.CallOption) (*ABitOfEverything, error)
	Lookup(ctx context.Context, in *sub2.IdMessage, opts ...client.CallOption) (*ABitOfEverything, error)
	Update(ctx context.Context, in *ABitOfEverything, opts ...client.CallOption) (*google_protobuf2.Empty, error)
	UpdateV2(ctx context.Context, in *UpdateV2Request, opts ...client.CallOption) (*google_protobuf2.Empty, error)
	PatchWithFieldMaskInBody(ctx context.Context, in *UpdateV2Request, opts ...client.CallOption) (*google_protobuf2.Empty, error)
	Delete(ctx context.Context, in *sub2.IdMessage, opts ...client.CallOption) (*google_protobuf2.Empty, error)
	GetQuery(ctx context.Context, in *ABitOfEverything, opts ...client.CallOption) (*google_protobuf2.Empty, error)
	GetRepeatedQuery(ctx context.Context, in *ABitOfEverythingRepeated, opts ...client.CallOption) (*ABitOfEverythingRepeated, error)
	// Echo allows posting a StringMessage value.
	//
	// It also exposes multiple bindings.
	//
	// This makes it useful when validating that the OpenAPI v2 API
	// description exposes documentation correctly on all paths
	// defined as additional_bindings in the proto.
	Echo(ctx context.Context, in *grpc_gateway_examples_sub.StringMessage, opts ...client.CallOption) (*grpc_gateway_examples_sub.StringMessage, error)
	DeepPathEcho(ctx context.Context, in *ABitOfEverything, opts ...client.CallOption) (*ABitOfEverything, error)
	NoBindings(ctx context.Context, in *google_protobuf3.Duration, opts ...client.CallOption) (*google_protobuf2.Empty, error)
	Timeout(ctx context.Context, in *google_protobuf2.Empty, opts ...client.CallOption) (*google_protobuf2.Empty, error)
	ErrorWithDetails(ctx context.Context, in *google_protobuf2.Empty, opts ...client.CallOption) (*google_protobuf2.Empty, error)
	GetMessageWithBody(ctx context.Context, in *MessageWithBody, opts ...client.CallOption) (*google_protobuf2.Empty, error)
	PostWithEmptyBody(ctx context.Context, in *Body, opts ...client.CallOption) (*google_protobuf2.Empty, error)
	GetWithMimicObjectResponse(ctx context.Context, in *google_protobuf2.Empty, opts ...client.CallOption) (*MimicObjectResponse, error)
	PostWithMimicObjectRequest(ctx context.Context, in *MimicObjectRequest, opts ...client.CallOption) (*google_protobuf2.Empty, error)
}

type aBitOfEverythingService struct {
	c    client.Client
	name string
}

func NewABitOfEverythingService(name string, c client.Client) ABitOfEverythingService {
	if c == nil {
		c = client.NewClient()
	}
	if len(name) == 0 {
		name = "grpc.gateway.examples.examplepb"
	}
	return &aBitOfEverythingService{
		c:    c,
		name: name,
	}
}

func (c *aBitOfEverythingService) Create(ctx context.Context, in *ABitOfEverything, opts ...client.CallOption) (*ABitOfEverything, error) {
	req := c.c.NewRequest(c.name, "ABitOfEverythingService.Create", in)
	out := new(ABitOfEverything)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingService) CreateBody(ctx context.Context, in *ABitOfEverything, opts ...client.CallOption) (*ABitOfEverything, error) {
	req := c.c.NewRequest(c.name, "ABitOfEverythingService.CreateBody", in)
	out := new(ABitOfEverything)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingService) Lookup(ctx context.Context, in *sub2.IdMessage, opts ...client.CallOption) (*ABitOfEverything, error) {
	req := c.c.NewRequest(c.name, "ABitOfEverythingService.Lookup", in)
	out := new(ABitOfEverything)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingService) Update(ctx context.Context, in *ABitOfEverything, opts ...client.CallOption) (*google_protobuf2.Empty, error) {
	req := c.c.NewRequest(c.name, "ABitOfEverythingService.Update", in)
	out := new(google_protobuf2.Empty)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingService) UpdateV2(ctx context.Context, in *UpdateV2Request, opts ...client.CallOption) (*google_protobuf2.Empty, error) {
	req := c.c.NewRequest(c.name, "ABitOfEverythingService.UpdateV2", in)
	out := new(google_protobuf2.Empty)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingService) PatchWithFieldMaskInBody(ctx context.Context, in *UpdateV2Request, opts ...client.CallOption) (*google_protobuf2.Empty, error) {
	req := c.c.NewRequest(c.name, "ABitOfEverythingService.PatchWithFieldMaskInBody", in)
	out := new(google_protobuf2.Empty)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingService) Delete(ctx context.Context, in *sub2.IdMessage, opts ...client.CallOption) (*google_protobuf2.Empty, error) {
	req := c.c.NewRequest(c.name, "ABitOfEverythingService.Delete", in)
	out := new(google_protobuf2.Empty)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingService) GetQuery(ctx context.Context, in *ABitOfEverything, opts ...client.CallOption) (*google_protobuf2.Empty, error) {
	req := c.c.NewRequest(c.name, "ABitOfEverythingService.GetQuery", in)
	out := new(google_protobuf2.Empty)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingService) GetRepeatedQuery(ctx context.Context, in *ABitOfEverythingRepeated, opts ...client.CallOption) (*ABitOfEverythingRepeated, error) {
	req := c.c.NewRequest(c.name, "ABitOfEverythingService.GetRepeatedQuery", in)
	out := new(ABitOfEverythingRepeated)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingService) Echo(ctx context.Context, in *grpc_gateway_examples_sub.StringMessage, opts ...client.CallOption) (*grpc_gateway_examples_sub.StringMessage, error) {
	req := c.c.NewRequest(c.name, "ABitOfEverythingService.Echo", in)
	out := new(grpc_gateway_examples_sub.StringMessage)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingService) DeepPathEcho(ctx context.Context, in *ABitOfEverything, opts ...client.CallOption) (*ABitOfEverything, error) {
	req := c.c.NewRequest(c.name, "ABitOfEverythingService.DeepPathEcho", in)
	out := new(ABitOfEverything)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingService) NoBindings(ctx context.Context, in *google_protobuf3.Duration, opts ...client.CallOption) (*google_protobuf2.Empty, error) {
	req := c.c.NewRequest(c.name, "ABitOfEverythingService.NoBindings", in)
	out := new(google_protobuf2.Empty)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingService) Timeout(ctx context.Context, in *google_protobuf2.Empty, opts ...client.CallOption) (*google_protobuf2.Empty, error) {
	req := c.c.NewRequest(c.name, "ABitOfEverythingService.Timeout", in)
	out := new(google_protobuf2.Empty)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingService) ErrorWithDetails(ctx context.Context, in *google_protobuf2.Empty, opts ...client.CallOption) (*google_protobuf2.Empty, error) {
	req := c.c.NewRequest(c.name, "ABitOfEverythingService.ErrorWithDetails", in)
	out := new(google_protobuf2.Empty)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingService) GetMessageWithBody(ctx context.Context, in *MessageWithBody, opts ...client.CallOption) (*google_protobuf2.Empty, error) {
	req := c.c.NewRequest(c.name, "ABitOfEverythingService.GetMessageWithBody", in)
	out := new(google_protobuf2.Empty)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingService) PostWithEmptyBody(ctx context.Context, in *Body, opts ...client.CallOption) (*google_protobuf2.Empty, error) {
	req := c.c.NewRequest(c.name, "ABitOfEverythingService.PostWithEmptyBody", in)
	out := new(google_protobuf2.Empty)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingService) GetWithMimicObjectResponse(ctx context.Context, in *google_protobuf2.Empty, opts ...client.CallOption) (*MimicObjectResponse, error) {
	req := c.c.NewRequest(c.name, "ABitOfEverythingService.GetWithMimicObjectResponse", in)
	out := new(MimicObjectResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingService) PostWithMimicObjectRequest(ctx context.Context, in *MimicObjectRequest, opts ...client.CallOption) (*google_protobuf2.Empty, error) {
	req := c.c.NewRequest(c.name, "ABitOfEverythingService.PostWithMimicObjectRequest", in)
	out := new(google_protobuf2.Empty)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ABitOfEverythingService service

type ABitOfEverythingServiceHandler interface {
	// Create a new ABitOfEverything
	//
	// This API creates a new ABitOfEverything
	Create(context.Context, *ABitOfEverything, *ABitOfEverything) error
	CreateBody(context.Context, *ABitOfEverything, *ABitOfEverything) error
	Lookup(context.Context, *sub2.IdMessage, *ABitOfEverything) error
	Update(context.Context, *ABitOfEverything, *google_protobuf2.Empty) error
	UpdateV2(context.Context, *UpdateV2Request, *google_protobuf2.Empty) error
	PatchWithFieldMaskInBody(context.Context, *UpdateV2Request, *google_protobuf2.Empty) error
	Delete(context.Context, *sub2.IdMessage, *google_protobuf2.Empty) error
	GetQuery(context.Context, *ABitOfEverything, *google_protobuf2.Empty) error
	GetRepeatedQuery(context.Context, *ABitOfEverythingRepeated, *ABitOfEverythingRepeated) error
	// Echo allows posting a StringMessage value.
	//
	// It also exposes multiple bindings.
	//
	// This makes it useful when validating that the OpenAPI v2 API
	// description exposes documentation correctly on all paths
	// defined as additional_bindings in the proto.
	Echo(context.Context, *grpc_gateway_examples_sub.StringMessage, *grpc_gateway_examples_sub.StringMessage) error
	DeepPathEcho(context.Context, *ABitOfEverything, *ABitOfEverything) error
	NoBindings(context.Context, *google_protobuf3.Duration, *google_protobuf2.Empty) error
	Timeout(context.Context, *google_protobuf2.Empty, *google_protobuf2.Empty) error
	ErrorWithDetails(context.Context, *google_protobuf2.Empty, *google_protobuf2.Empty) error
	GetMessageWithBody(context.Context, *MessageWithBody, *google_protobuf2.Empty) error
	PostWithEmptyBody(context.Context, *Body, *google_protobuf2.Empty) error
	GetWithMimicObjectResponse(context.Context, *google_protobuf2.Empty, *MimicObjectResponse) error
	PostWithMimicObjectRequest(context.Context, *MimicObjectRequest, *google_protobuf2.Empty) error
}

func RegisterABitOfEverythingServiceHandler(s server.Server, hdlr ABitOfEverythingServiceHandler, opts ...server.HandlerOption) error {
	type aBitOfEverythingService interface {
		Create(ctx context.Context, in *ABitOfEverything, out *ABitOfEverything) error
		CreateBody(ctx context.Context, in *ABitOfEverything, out *ABitOfEverything) error
		Lookup(ctx context.Context, in *sub2.IdMessage, out *ABitOfEverything) error
		Update(ctx context.Context, in *ABitOfEverything, out *google_protobuf2.Empty) error
		UpdateV2(ctx context.Context, in *UpdateV2Request, out *google_protobuf2.Empty) error
		PatchWithFieldMaskInBody(ctx context.Context, in *UpdateV2Request, out *google_protobuf2.Empty) error
		Delete(ctx context.Context, in *sub2.IdMessage, out *google_protobuf2.Empty) error
		GetQuery(ctx context.Context, in *ABitOfEverything, out *google_protobuf2.Empty) error
		GetRepeatedQuery(ctx context.Context, in *ABitOfEverythingRepeated, out *ABitOfEverythingRepeated) error
		Echo(ctx context.Context, in *grpc_gateway_examples_sub.StringMessage, out *grpc_gateway_examples_sub.StringMessage) error
		DeepPathEcho(ctx context.Context, in *ABitOfEverything, out *ABitOfEverything) error
		NoBindings(ctx context.Context, in *google_protobuf3.Duration, out *google_protobuf2.Empty) error
		Timeout(ctx context.Context, in *google_protobuf2.Empty, out *google_protobuf2.Empty) error
		ErrorWithDetails(ctx context.Context, in *google_protobuf2.Empty, out *google_protobuf2.Empty) error
		GetMessageWithBody(ctx context.Context, in *MessageWithBody, out *google_protobuf2.Empty) error
		PostWithEmptyBody(ctx context.Context, in *Body, out *google_protobuf2.Empty) error
		GetWithMimicObjectResponse(ctx context.Context, in *google_protobuf2.Empty, out *MimicObjectResponse) error
		PostWithMimicObjectRequest(ctx context.Context, in *MimicObjectRequest, out *google_protobuf2.Empty) error
	}
	type ABitOfEverythingService struct {
		aBitOfEverythingService
	}
	h := &aBitOfEverythingServiceHandler{hdlr}
	return s.Handle(s.NewHandler(&ABitOfEverythingService{h}, opts...))
}

type aBitOfEverythingServiceHandler struct {
	ABitOfEverythingServiceHandler
}

func (h *aBitOfEverythingServiceHandler) Create(ctx context.Context, in *ABitOfEverything, out *ABitOfEverything) error {
	return h.ABitOfEverythingServiceHandler.Create(ctx, in, out)
}

func (h *aBitOfEverythingServiceHandler) CreateBody(ctx context.Context, in *ABitOfEverything, out *ABitOfEverything) error {
	return h.ABitOfEverythingServiceHandler.CreateBody(ctx, in, out)
}

func (h *aBitOfEverythingServiceHandler) Lookup(ctx context.Context, in *sub2.IdMessage, out *ABitOfEverything) error {
	return h.ABitOfEverythingServiceHandler.Lookup(ctx, in, out)
}

func (h *aBitOfEverythingServiceHandler) Update(ctx context.Context, in *ABitOfEverything, out *google_protobuf2.Empty) error {
	return h.ABitOfEverythingServiceHandler.Update(ctx, in, out)
}

func (h *aBitOfEverythingServiceHandler) UpdateV2(ctx context.Context, in *UpdateV2Request, out *google_protobuf2.Empty) error {
	return h.ABitOfEverythingServiceHandler.UpdateV2(ctx, in, out)
}

func (h *aBitOfEverythingServiceHandler) PatchWithFieldMaskInBody(ctx context.Context, in *UpdateV2Request, out *google_protobuf2.Empty) error {
	return h.ABitOfEverythingServiceHandler.PatchWithFieldMaskInBody(ctx, in, out)
}

func (h *aBitOfEverythingServiceHandler) Delete(ctx context.Context, in *sub2.IdMessage, out *google_protobuf2.Empty) error {
	return h.ABitOfEverythingServiceHandler.Delete(ctx, in, out)
}

func (h *aBitOfEverythingServiceHandler) GetQuery(ctx context.Context, in *ABitOfEverything, out *google_protobuf2.Empty) error {
	return h.ABitOfEverythingServiceHandler.GetQuery(ctx, in, out)
}

func (h *aBitOfEverythingServiceHandler) GetRepeatedQuery(ctx context.Context, in *ABitOfEverythingRepeated, out *ABitOfEverythingRepeated) error {
	return h.ABitOfEverythingServiceHandler.GetRepeatedQuery(ctx, in, out)
}

func (h *aBitOfEverythingServiceHandler) Echo(ctx context.Context, in *grpc_gateway_examples_sub.StringMessage, out *grpc_gateway_examples_sub.StringMessage) error {
	return h.ABitOfEverythingServiceHandler.Echo(ctx, in, out)
}

func (h *aBitOfEverythingServiceHandler) DeepPathEcho(ctx context.Context, in *ABitOfEverything, out *ABitOfEverything) error {
	return h.ABitOfEverythingServiceHandler.DeepPathEcho(ctx, in, out)
}

func (h *aBitOfEverythingServiceHandler) NoBindings(ctx context.Context, in *google_protobuf3.Duration, out *google_protobuf2.Empty) error {
	return h.ABitOfEverythingServiceHandler.NoBindings(ctx, in, out)
}

func (h *aBitOfEverythingServiceHandler) Timeout(ctx context.Context, in *google_protobuf2.Empty, out *google_protobuf2.Empty) error {
	return h.ABitOfEverythingServiceHandler.Timeout(ctx, in, out)
}

func (h *aBitOfEverythingServiceHandler) ErrorWithDetails(ctx context.Context, in *google_protobuf2.Empty, out *google_protobuf2.Empty) error {
	return h.ABitOfEverythingServiceHandler.ErrorWithDetails(ctx, in, out)
}

func (h *aBitOfEverythingServiceHandler) GetMessageWithBody(ctx context.Context, in *MessageWithBody, out *google_protobuf2.Empty) error {
	return h.ABitOfEverythingServiceHandler.GetMessageWithBody(ctx, in, out)
}

func (h *aBitOfEverythingServiceHandler) PostWithEmptyBody(ctx context.Context, in *Body, out *google_protobuf2.Empty) error {
	return h.ABitOfEverythingServiceHandler.PostWithEmptyBody(ctx, in, out)
}

func (h *aBitOfEverythingServiceHandler) GetWithMimicObjectResponse(ctx context.Context, in *google_protobuf2.Empty, out *MimicObjectResponse) error {
	return h.ABitOfEverythingServiceHandler.GetWithMimicObjectResponse(ctx, in, out)
}

func (h *aBitOfEverythingServiceHandler) PostWithMimicObjectRequest(ctx context.Context, in *MimicObjectRequest, out *google_protobuf2.Empty) error {
	return h.ABitOfEverythingServiceHandler.PostWithMimicObjectRequest(ctx, in, out)
}

// Client API for CamelCaseServiceName service

type CamelCaseServiceNameService interface {
	Empty(ctx context.Context, in *google_protobuf2.Empty, opts ...client.CallOption) (*google_protobuf2.Empty, error)
}

type camelCaseServiceNameService struct {
	c    client.Client
	name string
}

func NewCamelCaseServiceNameService(name string, c client.Client) CamelCaseServiceNameService {
	if c == nil {
		c = client.NewClient()
	}
	if len(name) == 0 {
		name = "grpc.gateway.examples.examplepb"
	}
	return &camelCaseServiceNameService{
		c:    c,
		name: name,
	}
}

func (c *camelCaseServiceNameService) Empty(ctx context.Context, in *google_protobuf2.Empty, opts ...client.CallOption) (*google_protobuf2.Empty, error) {
	req := c.c.NewRequest(c.name, "CamelCaseServiceName.Empty", in)
	out := new(google_protobuf2.Empty)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CamelCaseServiceName service

type CamelCaseServiceNameHandler interface {
	Empty(context.Context, *google_protobuf2.Empty, *google_protobuf2.Empty) error
}

func RegisterCamelCaseServiceNameHandler(s server.Server, hdlr CamelCaseServiceNameHandler, opts ...server.HandlerOption) error {
	type camelCaseServiceName interface {
		Empty(ctx context.Context, in *google_protobuf2.Empty, out *google_protobuf2.Empty) error
	}
	type CamelCaseServiceName struct {
		camelCaseServiceName
	}
	h := &camelCaseServiceNameHandler{hdlr}
	return s.Handle(s.NewHandler(&CamelCaseServiceName{h}, opts...))
}

type camelCaseServiceNameHandler struct {
	CamelCaseServiceNameHandler
}

func (h *camelCaseServiceNameHandler) Empty(ctx context.Context, in *google_protobuf2.Empty, out *google_protobuf2.Empty) error {
	return h.CamelCaseServiceNameHandler.Empty(ctx, in, out)
}

// Client API for AnotherServiceWithNoBindings service

type AnotherServiceWithNoBindingsService interface {
	NoBindings(ctx context.Context, in *google_protobuf2.Empty, opts ...client.CallOption) (*google_protobuf2.Empty, error)
}

type anotherServiceWithNoBindingsService struct {
	c    client.Client
	name string
}

func NewAnotherServiceWithNoBindingsService(name string, c client.Client) AnotherServiceWithNoBindingsService {
	if c == nil {
		c = client.NewClient()
	}
	if len(name) == 0 {
		name = "grpc.gateway.examples.examplepb"
	}
	return &anotherServiceWithNoBindingsService{
		c:    c,
		name: name,
	}
}

func (c *anotherServiceWithNoBindingsService) NoBindings(ctx context.Context, in *google_protobuf2.Empty, opts ...client.CallOption) (*google_protobuf2.Empty, error) {
	req := c.c.NewRequest(c.name, "AnotherServiceWithNoBindings.NoBindings", in)
	out := new(google_protobuf2.Empty)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AnotherServiceWithNoBindings service

type AnotherServiceWithNoBindingsHandler interface {
	NoBindings(context.Context, *google_protobuf2.Empty, *google_protobuf2.Empty) error
}

func RegisterAnotherServiceWithNoBindingsHandler(s server.Server, hdlr AnotherServiceWithNoBindingsHandler, opts ...server.HandlerOption) error {
	type anotherServiceWithNoBindings interface {
		NoBindings(ctx context.Context, in *google_protobuf2.Empty, out *google_protobuf2.Empty) error
	}
	type AnotherServiceWithNoBindings struct {
		anotherServiceWithNoBindings
	}
	h := &anotherServiceWithNoBindingsHandler{hdlr}
	return s.Handle(s.NewHandler(&AnotherServiceWithNoBindings{h}, opts...))
}

type anotherServiceWithNoBindingsHandler struct {
	AnotherServiceWithNoBindingsHandler
}

func (h *anotherServiceWithNoBindingsHandler) NoBindings(ctx context.Context, in *google_protobuf2.Empty, out *google_protobuf2.Empty) error {
	return h.AnotherServiceWithNoBindingsHandler.NoBindings(ctx, in, out)
}
